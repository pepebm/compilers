
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMPARE DIVIDE ENDFILE EQUAL GE GREATER ID LBLOCK LBRACKET LE LESS LPAREN MINUS NE NUMBER PLUS RBLOCK RBRACKET RPAREN SEMICOLON TIMES else if int return void whileexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'DIVIDE':([1,4,5,11,12,13,14,15,],[-7,9,-6,-8,9,9,-5,-4,]),'RPAREN':([1,4,5,6,11,12,13,14,15,],[-7,-3,-6,11,-8,-2,-1,-5,-4,]),'LPAREN':([0,2,7,8,9,10,],[2,2,2,2,2,2,]),'$end':([1,3,4,5,11,12,13,14,15,],[-7,0,-3,-6,-8,-2,-1,-5,-4,]),'NUMBER':([0,2,7,8,9,10,],[1,1,1,1,1,1,]),'PLUS':([1,3,4,5,6,11,12,13,14,15,],[-7,8,-3,-6,8,-8,-2,-1,-5,-4,]),'MINUS':([1,3,4,5,6,11,12,13,14,15,],[-7,7,-3,-6,7,-8,-2,-1,-5,-4,]),'TIMES':([1,4,5,11,12,13,14,15,],[-7,10,-6,-8,10,10,-5,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,],[3,6,]),'term':([0,2,7,8,],[4,4,12,13,]),'factor':([0,2,7,8,9,10,],[5,5,5,5,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','test.py',9),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','test.py',13),
  ('expression -> term','expression',1,'p_expression_term','test.py',17),
  ('term -> term TIMES factor','term',3,'p_term_times','test.py',21),
  ('term -> term DIVIDE factor','term',3,'p_term_div','test.py',25),
  ('term -> factor','term',1,'p_term_factor','test.py',29),
  ('factor -> NUMBER','factor',1,'p_factor_num','test.py',33),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','test.py',37),
]
